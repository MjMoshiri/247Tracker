services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1
    restart: always

  cleanup:
    image: alpine:latest
    container_name: redis-cleanup
    volumes:
      - redis-data:/data
    entrypoint: >
      sh -c "while true; do
              find /data -type f -name 'dump.rdb' -mtime +5 -delete;
              sleep 86400; 
            done"
  consumer:
    build:
      context: ./src/consumer
    container_name: consumer
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - CONSUMER_RATE_LIMIT_PER_MINUTE=${CONSUMER_RATE_LIMIT_PER_MINUTE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - SQS_QUEUE_URL=${SQS_QUEUE_URL}
      - DYNAMODB_TABLE_NAME=${DYNAMODB_TABLE_NAME}
    depends_on:
      - rabbitmq
      - redis

  queue-api:
    build:
      context: ./src/queue_api
    container_name: queue-api
    ports:
      - "${QUEUE_API_PORT}:${QUEUE_API_PORT}"
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - QUEUE_API_PORT=${QUEUE_API_PORT}
    depends_on:
      - rabbitmq
      - redis


volumes:
  redis-data: